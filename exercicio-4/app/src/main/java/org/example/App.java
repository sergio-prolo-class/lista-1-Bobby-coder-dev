/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.FileReader;
import java.io.IOException;

public class App {
    
    public static void main(String[] args) {
        Scanner entrada = new Scanner(System.in);

        int linhas = 0;
        String[] tabuleiro = new String[10];

        // Ler o tabuleiro
        while (entrada.hasNext()) {
            if (linhas >= 10) {
                System.out.println("Tabuleiro inválido: mais de 10 linhas.");
                return;
            }

            String linha = entrada.nextLine().replaceAll(" ", "");
            if (linha.length() != 10) {
                System.out.println("Tabuleiro inválido: linha " + (linhas + 1) + " não tem 10 colunas.");
                return;
            }

            tabuleiro[linhas++] = linha;
        }

        if (linhas < 10) {
            System.out.println("Tabuleiro inválido: menos de 10 linhas.");
            return;
        }

        boolean valido = verificaBarcos(tabuleiro);

        if (valido) {
            System.out.println("Tabuleiro válido.");
        } else {
            System.out.println("Tabuleiro inválido.");
        }
    }


    public static boolean verificaBarcos(String[] tabuleiro) {
        char[] barcos = {'P', 'E', 'C', 'S', 'N'};
        int[] tamanhos = {5, 4, 3, 3, 2};
        int[] contagem = new int[5];

        for (int i = 0; i < tabuleiro.length; i++) {
            for (int j = 0; j < tabuleiro[i].length(); j++) {
                char c = tabuleiro[i].charAt(j);
                if (c == '.') continue;

                boolean reconhecido = false;

                for (int k = 0; k < barcos.length; k++) {
                    if (c == barcos[k]) {
                        if (!removeBarco(tabuleiro, i, j, tamanhos[k], c)) {
                            return false;
                        }
                        contagem[k]++;
                        reconhecido = true;
                        break;
                    }
                }
                if (!reconhecido) {
                    System.out.println("Tabuleiro inválido: barco " + c + " não reconhecido.");
                    return false;
                }
            }
        }

        for (int i = 0; i < contagem.length; i++) {
            if (contagem[i] > 1) {
                System.out.println("Tabuleiro inválido: mais de um barco " + barcos[i] + " encontrado.");
                return false;
            } else if (contagem[i] == 0) {
                System.out.println("Tabuleiro inválido: barco " + barcos[i] + " não encontrado.");
                return false;
            }
        }

        return true;
    }


    public static boolean removeBarco(String[] tabuleiro, int i, int j, int tamanho, char barco) {
        int linhas = tabuleiro.length;
        int colunas = tabuleiro[0].length();

        // Verifica horizontal
        if (j + tamanho <= colunas) {
            boolean horizontal = true;
            for (int k = 0; k < tamanho; k++) {
                if (tabuleiro[i].charAt(j + k) != barco) {
                    horizontal = false;
                    break;
                }
            }
            if (horizontal) {
                for (int k = 0; k < tamanho; k++) {
                    tabuleiro[i] = tabuleiro[i].replace(tabuleiro[i].charAt(j + k), '.');
                }
                return true;
            }
        }

        // Verifica vertical
        if (i + tamanho <= linhas) {
            boolean vertical = true;
            for (int k = 0; k < tamanho; k++) {
                if (tabuleiro[i + k].charAt(j) != barco) {
                    vertical = false;
                    break;
                }
            }
            if (vertical) {
                for (int k = 0; k < tamanho; k++) {
                    tabuleiro[i + k] = tabuleiro[i + k].replace(tabuleiro[i + k].charAt(j), '.');                }
                return true;
            }
        }

        System.out.println("Tabuleiro inválido: barco " + barco + " não tem tamanho " + tamanho);
        return false;
    }

}